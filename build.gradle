plugins {
    id 'java'
    id 'eu.xenit.amp' version '1.0.1'
    id 'eu.xenit.alfresco' version '1.0.1'
    id "maven-publish"
    id "signing"
    id "idea"

}

description = 'Arender amp for Alfresco'
group = 'eu.xenit.transformers'


def baseVersion = '1.0.0'
def branchName = System.env.TRAVIS_BRANCH
def isRelease = branchName != null && branchName.startsWith("release")
if (isRelease)
    version = "$baseVersion"
else
    version = "$baseVersion-SNAPSHOT"


repositories {
    mavenCentral()
    alfrescoPublic()
}


ext.alfrescoVersion = "5.1.e"



test {
    useJUnitPlatform()
}

dependencies {
    compile group: 'org.alfresco', name: 'alfresco-platform-distribution', version: '5.1.e', ext: 'pom'
    testCompile "org.mockito:mockito-core:2.24.0"
    alfrescoProvided("org.alfresco:alfresco-repository:5.1.e"){
        exclude group: "org.springframework.social"
    }

    testImplementation(
            'junit:junit:4.12',
            'org.junit.jupiter:junit-jupiter-api:5.4.2'
    )
    testRuntime(
            'org.junit.jupiter:junit-jupiter-engine:5.4.2',
            'org.junit.vintage:junit-vintage-engine:5.4.2'
    )
}


amp {

}


publishing {
    publications {
        all {
            pom {
                url = 'https://github.com/xenit-eu/Arender4Alfresco'

                scm {
                    connection = 'scm:git:git@github.com:xenit-eu/Arender4Alfresco.git'
                    developerConnection = 'scm:git:git@github.com:xenit-eu/Arender4Alfresco.git'
                    url = 'https://github.com/xenit-eu/Arender4Alfresco.git'
                }

                developers {
                    developer {
                        id = "xenit"
                        name = "Xenit Solutions NV"
                    }
                }

                licenses {
                    license {
                        name = 'GNU Lesser General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/lgpl-3.0.txt'
                    }
                }
            }
        }
        mavenJava(MavenPublication) {
            artifact amp
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = property('SONATYPEUSERNAME') ? SONATYPEUSERNAME : System.getenv('SONATYPEUSERNAME')
                password = property('SONATYPEPASSWORD') ? SONATYPEPASSWORD : System.getenv('SONATYPEPASSWORD')
            }
        }
    }
}

signing {
    required { gradle.taskGraph.hasTask("publish") }
    sign publishing.publications.mavenJava
}

